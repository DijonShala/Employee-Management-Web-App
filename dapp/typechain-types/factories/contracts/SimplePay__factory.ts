/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SimplePay, SimplePayInterface } from "../../contracts/SimplePay";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ContractFunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "employee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "basicSalary",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allowances",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deductions",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "EmployeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "employee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "netSalary",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "SalaryTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "WEI_PER_ETHER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_basicSalary",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allowances",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deductions",
        type: "uint256",
      },
    ],
    name: "addEmployeeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "employeeAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "employees",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "basicSalary",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allowances",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deductions",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundContract",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEmployees",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "basicSalary",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowances",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deductions",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
        ],
        internalType: "struct SimplePay.Employee[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "removeEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "transferSalary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_basicSalary",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allowances",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deductions",
        type: "uint256",
      },
    ],
    name: "updateEmployeeSalary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b5060015f819055503360035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611d7a806100635f395ff3fe6080604052600436106100dc575f3560e01c8063b6db75a01161007e578063d0e30db011610058578063d0e30db014610284578063d108177a1461028e578063e3366fed146102b6578063f851a440146102e0576100dc565b8063b6db75a014610210578063bd097e211461023a578063d067894714610244576100dc565b80632e1a7d4d116100ba5780632e1a7d4d1461015c57806359315c1b1461018457806359bdc3ed146101ac5780637521720b146101d4576100dc565b806312065fe0146100e057806319a1b54f1461010a578063226d895a14610134575b5f5ffd5b3480156100eb575f5ffd5b506100f461030a565b60405161010191906114b2565b60405180910390f35b348015610115575f5ffd5b5061011e610311565b60405161012b91906114b2565b60405180910390f35b34801561013f575f5ffd5b5061015a60048036038101906101559190611553565b61031d565b005b348015610167575f5ffd5b50610182600480360381019061017d91906115b7565b610638565b005b34801561018f575f5ffd5b506101aa60048036038101906101a591906115e2565b610782565b005b3480156101b7575f5ffd5b506101d260048036038101906101cd9190611553565b610ab2565b005b3480156101df575f5ffd5b506101fa60048036038101906101f591906115b7565b610ca2565b604051610207919061161c565b60405180910390f35b34801561021b575f5ffd5b50610224610cdd565b604051610231919061164f565b60405180910390f35b610242610d33565b005b34801561024f575f5ffd5b5061026a600480360381019061026591906115e2565b610dc7565b60405161027b959493929190611668565b60405180910390f35b61028c610e24565b005b348015610299575f5ffd5b506102b460048036038101906102af91906115e2565b610eb5565b005b3480156102c1575f5ffd5b506102ca611157565b6040516102d791906117f4565b60405180910390f35b3480156102eb575f5ffd5b506102f461130e565b604051610301919061161c565b60405180910390f35b5f47905090565b670de0b6b3a764000081565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a390611894565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361041a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610411906118fc565b60405180910390fd5b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206004015f9054906101000a900460ff16610625576040518060a001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018381526020018281526020016001151581525060015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff021916908315150217905550905050600284908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508373ffffffffffffffffffffffffffffffffffffffff167f2eed5162210b6ce70b4189ac2b9fa981a9c701d38c0654b12662b367fc8c422184848442604051610618949392919061191a565b60405180910390a2610632565b61063184848484610ab2565b5b50505050565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106be90611894565b60405180910390fd5b6106cf611333565b80471015610712576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610709906119a7565b60405180910390fd5b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050158015610776573d5f5f3e3d5ffd5b5061077f611377565b50565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610811576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080890611894565b60405180910390fd5b610819611333565b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206004015f9054906101000a900460ff166108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90611a0f565b60405180910390fd5b5f60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f670de0b6b3a7640000620f424061012c8460600151856040015186602001516109a69190611a5a565b6109b09190611a8d565b6109ba9190611ac0565b6109c49190611b2e565b6109ce9190611ac0565b905080471015610a13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0a90611ba8565b60405180910390fd5b815f015173ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f19350505050610a52575f5ffd5b815f015173ffffffffffffffffffffffffffffffffffffffff167f01968c3a2f4ab0c5313d079cbf4d7c1ca622defe616bb477603911d0b950e0028242604051610a9d929190611bc6565b60405180910390a25050610aaf611377565b50565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3890611894565b60405180910390fd5b60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206004015f9054906101000a900460ff16610bcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc490611a0f565b60405180910390fd5b8260015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600101819055508160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20600201819055508060015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003018190555050505050565b60028181548110610cb1575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b5f3411610d75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6c90611c37565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f3b31cbadfd3fd939750f09d3bdbd6c0531dde23f05d55dcc202798f39d0908953442604051610dbd929190611bc6565b60405180910390a2565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015490806004015f9054906101000a900460ff16905085565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610eb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaa90611894565b60405180910390fd5b565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3b90611894565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206004015f9054906101000a900460ff16610fd0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc790611a0f565b60405180910390fd5b60015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f5f82015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182015f9055600282015f9055600382015f9055600482015f6101000a81549060ff021916905550505f61106782611380565b90506002600160028054905061107d9190611a8d565b8154811061108e5761108d611c55565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600282815481106110ca576110c9611c55565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600280548061112157611120611c82565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590555050565b60605f60028054905090505f8167ffffffffffffffff81111561117d5761117c611caf565b5b6040519080825280602002602001820160405280156111b657816020015b6111a3611458565b81526020019060019003908161119b5790505b5090505f5f90505b82811015611305575f600282815481106111db576111da611c55565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060015f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff1615151515815250508383815181106112ec576112eb611c55565b5b60200260200101819052505080806001019150506111be565b50809250505090565b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025f540361136e576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b60015f81905550565b5f5f5f90505b600280549050811015611417578273ffffffffffffffffffffffffffffffffffffffff16600282815481106113be576113bd611c55565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361140a5780915050611453565b8080600101915050611386565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144a90611d26565b60405180910390fd5b919050565b6040518060a001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f81526020015f151581525090565b5f819050919050565b6114ac8161149a565b82525050565b5f6020820190506114c55f8301846114a3565b92915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114f8826114cf565b9050919050565b611508816114ee565b8114611512575f5ffd5b50565b5f81359050611523816114ff565b92915050565b6115328161149a565b811461153c575f5ffd5b50565b5f8135905061154d81611529565b92915050565b5f5f5f5f6080858703121561156b5761156a6114cb565b5b5f61157887828801611515565b94505060206115898782880161153f565b935050604061159a8782880161153f565b92505060606115ab8782880161153f565b91505092959194509250565b5f602082840312156115cc576115cb6114cb565b5b5f6115d98482850161153f565b91505092915050565b5f602082840312156115f7576115f66114cb565b5b5f61160484828501611515565b91505092915050565b611616816114ee565b82525050565b5f60208201905061162f5f83018461160d565b92915050565b5f8115159050919050565b61164981611635565b82525050565b5f6020820190506116625f830184611640565b92915050565b5f60a08201905061167b5f83018861160d565b61168860208301876114a3565b61169560408301866114a3565b6116a260608301856114a3565b6116af6080830184611640565b9695505050505050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6116eb816114ee565b82525050565b6116fa8161149a565b82525050565b61170981611635565b82525050565b60a082015f8201516117235f8501826116e2565b50602082015161173660208501826116f1565b50604082015161174960408501826116f1565b50606082015161175c60608501826116f1565b50608082015161176f6080850182611700565b50505050565b5f611780838361170f565b60a08301905092915050565b5f602082019050919050565b5f6117a2826116b9565b6117ac81856116c3565b93506117b7836116d3565b805f5b838110156117e75781516117ce8882611775565b97506117d98361178c565b9250506001810190506117ba565b5085935050505092915050565b5f6020820190508181035f83015261180c8184611798565b905092915050565b5f82825260208201905092915050565b7f4f6e6c792061646d696e2063616e20706572666f726d207468697320616374695f8201527f6f6e000000000000000000000000000000000000000000000000000000000000602082015250565b5f61187e602283611814565b915061188982611824565b604082019050919050565b5f6020820190508181035f8301526118ab81611872565b9050919050565b7f496e76616c69642077616c6c65742061646472657373000000000000000000005f82015250565b5f6118e6601683611814565b91506118f1826118b2565b602082019050919050565b5f6020820190508181035f830152611913816118da565b9050919050565b5f60808201905061192d5f8301876114a3565b61193a60208301866114a3565b61194760408301856114a3565b61195460608301846114a3565b95945050505050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f611991601483611814565b915061199c8261195d565b602082019050919050565b5f6020820190508181035f8301526119be81611985565b9050919050565b7f456d706c6f79656520646f6573206e6f742065786973740000000000000000005f82015250565b5f6119f9601783611814565b9150611a04826119c5565b602082019050919050565b5f6020820190508181035f830152611a26816119ed565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611a648261149a565b9150611a6f8361149a565b9250828201905080821115611a8757611a86611a2d565b5b92915050565b5f611a978261149a565b9150611aa28361149a565b9250828203905081811115611aba57611ab9611a2d565b5b92915050565b5f611aca8261149a565b9150611ad58361149a565b9250828202611ae38161149a565b91508282048414831517611afa57611af9611a2d565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611b388261149a565b9150611b438361149a565b925082611b5357611b52611b01565b5b828204905092915050565b7f496e73756666696369656e7420636f6e74726163742062616c616e63652e00005f82015250565b5f611b92601e83611814565b9150611b9d82611b5e565b602082019050919050565b5f6020820190508181035f830152611bbf81611b86565b9050919050565b5f604082019050611bd95f8301856114a3565b611be660208301846114a3565b9392505050565b7f596f75206d7573742073656e6420736f6d6520457468657200000000000000005f82015250565b5f611c21601883611814565b9150611c2c82611bed565b602082019050919050565b5f6020820190508181035f830152611c4e81611c15565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f41646472657373206e6f7420666f756e640000000000000000000000000000005f82015250565b5f611d10601183611814565b9150611d1b82611cdc565b602082019050919050565b5f6020820190508181035f830152611d3d81611d04565b905091905056fea2646970667358221220a4671579502669d0a7e335d6bc379d06ee4853a8ada81a81485b7124461c71cb64736f6c634300081c0033";

type SimplePayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimplePayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimplePay__factory extends ContractFactory {
  constructor(...args: SimplePayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SimplePay & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SimplePay__factory {
    return super.connect(runner) as SimplePay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimplePayInterface {
    return new Interface(_abi) as SimplePayInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SimplePay {
    return new Contract(address, _abi, runner) as unknown as SimplePay;
  }
}
